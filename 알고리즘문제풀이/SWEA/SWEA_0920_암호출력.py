# 16진수의 2진수 변환 딕셔너리
dct = {'0': '0000', '1': '0001', '2': '0010', '3': '0011', '4': '0100', '5': '0101', '6': '0110', '7': '0111',
       '8': '1000', '9': '1001', 'A': '1010', 'B': '1011', 'C': '1100', 'D': '1101', 'E': '1110', 'F': '1111'}
# 문제에서 주어진 암호 해독 딕셔너리
dct1 = {'001101':0, '010011':1, '111011':2, '110001':3, '100011':4, '110111':5, '001011':6, '111101':7, '011001':8, '101111':9}
T = int(input())
for tc in range(1, T+1):
    case = input()
    # [1] 16진수 -> 2진수 저장
    code = ''
    for ch in case:
        code += dct[ch]

    # [2] 우측 끝의 '1' 찾기
    e = len(code) - 1
    while code[e] == '0':
        e -= 1

    # [3] 찾은 위치 (e - 5) % 6 에서 부터 시작하여 6개씩, 암호를 숫자로 변환
    ans = []
    for i in range((e-5)%6, e, 6):
        ans.append(dct1[code[i:i+6]])

    print(f'#{tc}', *ans)